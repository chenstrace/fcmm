Fast Concurrent Memoization Map (Fcmm)
http://projects.giacomodrago.com/fcmm

This file contains the results of some benchmarks comparing Fcmm and
tbb::concurrent_hash_map. You can execute the same benchmark on your machine by running the
following commands in the "test" directory:

$ make benchmark_tbb                                    # Needs the Intel Threading Building Blocks (TBB) library
$ export FCMM_NUM_THREADS=4                             # Change as needed
$ ./benchmark_tbb_batch.sh | tee benchmark_results.txt  # Will write a file named benchmark_results.txt
                                                        # containing a table similar to the ones below

Actually, Fcmm and tbb::concurrent_hash_map provide different features (e.g. Fcmm does not support
erase and update) so the benchmark is not meant to be an 'absolute' comparison between the two.
Fcmm may provide a better performance when:
 - There is no need to delete or update the entries
 - The map shall store a large number of entries and you can provide a reasonable estimate of their number
 - Values are relatively fast to compute
 - Concurrency is high (4 threads or more)

Notes:
----------
 - For the serial run std::unordered_map is used
 - Times are expressed in milliseconds


Machine 1:
----------
Intel Core i5-2415M @2.30GHz
4GB RAM
Mac OS X 10.8.4
MacPorts gcc 4.7.3

Number of threads:

Operations   % of         Time       Time     Time     Fcmm speedup   Fcmm speedup
(mln)        insertions   (serial)   (TBB)    (Fcmm)   over serial    over TBB
-----------------------------------------------------------------------------------
8            10           1754       650      522      3.36           1.25
8            20           2071       842      634      3.27           1.33
8            30           2533       985      700      3.62           1.41
8            40           2963       1182     770      3.85           1.54
8            50           3252       1314     876      3.71           1.50
16           10           3649       1331     1102     3.31           1.21
16           20           4732       1701     1275     3.71           1.33
16           30           5240       2025     1412     3.71           1.43
16           40           5862       2406     1561     3.76           1.54
16           50           6529       2719     1736     3.76           1.57
32           10           8058       2746     2229     3.62           1.23
32           20           9253       3517     2613     3.54           1.35
32           30           10578      4220     2977     3.55           1.42
32           40           12439      5010     3284     3.79           1.53
32           50           14424      5568     3567     4.04           1.56
64           10           15266      5861     4519     3.38           1.30
64           20           18972      7433     5387     3.52           1.38
64           30           22020      9049     6399     3.44           1.41
64           40           25527      10590    7085     3.60           1.49
64           50           31754      11951    7852     4.04           1.52


Machine 2:
----------
Google Compute Engine
n1-highmem-8 (Intel Xeon @2.60GHz, 8 virtual cores, 52 GB RAM)
Debian 7 64 bit
gcc 4.7.2

Number of threads: 8

Operations   % of         Time       Time     Time     Fcmm speedup   Fcmm speedup
(mln)        insertions   (serial)   (TBB)    (Fcmm)   over serial    over TBB
-----------------------------------------------------------------------------------
8            10           1620       493      369      4.39           1.34
8            20           2154       686      516      4.17           1.33
8            30           2475       947      521      4.75           1.82
8            40           2880       1154     566      5.09           2.04
8            50           2980       1394     797      3.74           1.75
16           10           3787       1041     795      4.76           1.31
16           20           4909       1539     1051     4.67           1.46
16           30           5282       2015     1280     4.13           1.57
16           40           5806       2440     1456     3.99           1.68
16           50           6208       2871     1364     4.55           2.10
32           10           9620       2151     1727     5.57           1.25
32           20           10054      3063     2176     4.62           1.41
32           30           11051      4224     2055     5.38           2.06
32           40           11940      5023     2917     4.09           1.72
32           50           13571      6154     3217     4.22           1.91
64           10           19264      4404     3116     6.18           1.41
64           20           21183      6541     4394     4.82           1.49
64           30           23119      7928     4307     5.37           1.84
64           40           25406      9742     5666     4.48           1.72
64           50           28446      11528    5228     5.44           2.21
128          10           39857      8632     7287     5.47           1.18
128          20           43456      14188    8635     5.03           1.64
128          30           48048      16547    8253     5.82           2.00
128          40           53481      21443    11217    4.77           1.91
128          50           61055      23264    12225    4.99           1.90
256          10           82303      19606    14438    5.70           1.36
256          20           104436     25678    17526    5.96           1.47
256          30           119623     35893    20358    5.88           1.76
256          40           123203     39264    22553    5.46           1.74
256          50           136928     45888    22053    6.21           2.08
